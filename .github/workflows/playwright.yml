name: Playwright Tests

on:
  push:
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    env:
      # Your tests already read process.env.GITHUB_TOKEN
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      POLARIS_EMAIL: ${{ secrets.POLARIS_EMAIL }}
      POLARIS_PASSWORD: ${{ secrets.POLARIS_PASSWORD }}
      # If you also use alternate names:
      POLARIS_USER: ${{ secrets.POLARIS_EMAIL }}
      POLARIS_PASS: ${{ secrets.POLARIS_PASSWORD }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      # ---------- CACHES ----------
      # Cache npm deps based on your lockfile
      - name: Cache npm
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-

      # Cache Playwright browsers (Chromium, etc.)
      # Key includes lockfile hash so a Playwright version bump refreshes cache.
      - name: Cache Playwright browsers
        id: cache-playwright
        uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-playwright-
      # ----------------------------

      - name: Install dependencies
        run: npm ci

      # Install browsers only if cache missed (saves time on cache hits)
      - name: Install Playwright browsers
        if: steps.cache-playwright.outputs.cache-hit != 'true'
        run: npx playwright install --with-deps

      # Run Chromium only to keep CI fast & stable
      - name: Run tests
        run: npx playwright test --project=chromium --reporter=html

      # Always publish the HTML report
      - name: Upload HTML report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report
          retention-days: 7
          
      - name: Generate test summary badge
        if: always()
        run: |
          npx playwright test --reporter=json > results.json
          node -e "
          const fs = require('fs');
          const data = JSON.parse(fs.readFileSync('results.json'));
          const summary = { passed: 0, failed: 0, skipped: 0 };
          data.suites.forEach(suite => suite.tests?.forEach(t => {
            if (t.status === 'passed') summary.passed++;
            else if (t.status === 'failed') summary.failed++;
            else if (t.status === 'skipped') summary.skipped++;
          }));
          fs.writeFileSync('summary.json', JSON.stringify(summary, null, 2));
          "
          
      - name: Update badge on Gist
        if: always()
        uses: andymckay/update-gist@v1
        env:
          GIST_ID: your_gist_id_here
          GITHUB_TOKEN: ${{ secrets.GIST_TOKEN }}
        with:
          file: summary.json

      # Traces on failure help debugging
      - name: Upload traces
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: traces
          path: test-results
          retention-days: 7
